{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m",
				"m.pi"
			],
			[
				"g",
				"graffyGraph"
			],
			[
				"ar",
				"arc_length\t(calculations.py)"
			],
			[
				"circleD",
				"circleDotList"
			],
			[
				"circ",
				"circleDotList"
			],
			[
				"cir",
				"circleDotDict"
			],
			[
				"li",
				"list"
			],
			[
				"l",
				"len"
			],
			[
				"ta",
				"tans"
			],
			[
				"t",
				"tans"
			],
			[
				"a",
				"alpha"
			],
			[
				"cp",
				"cp.deepcopy"
			],
			[
				"ci",
				"circleDotDict\tstatement"
			],
			[
				"cd",
				"circleDotDict\tstatement"
			],
			[
				"n",
				"narcissus_py"
			],
			[
				"N",
				"narcissus"
			],
			[
				"gr",
				"graffyGraph"
			],
			[
				"p",
				"p_2"
			],
			[
				"o",
				"offset"
			],
			[
				"C",
				"C_1"
			],
			[
				"no",
				"norm\t(calculations.py)"
			],
			[
				"nx",
				"nx.Multigraph\t(graph.py)"
			],
			[
				"pe",
				"purple"
			],
			[
				"ha",
				"handelDict\tparam"
			],
			[
				"T",
				"True"
			],
			[
				"ch",
				"check_collisions\tfunction"
			],
			[
				"c",
				"circleList"
			],
			[
				"py",
				"pygame\t(main.py)"
			],
			[
				"tans",
				"tans"
			],
			[
				"point_",
				"point_tan\tfunction"
			],
			[
				"po",
				"point"
			],
			[
				"si",
				"sig[1"
			],
			[
				"cur",
				"cur_1"
			],
			[
				"u",
				"unit_line"
			],
			[
				"pr",
				"print"
			],
			[
				"co",
				"common_tan"
			],
			[
				"tan",
				"tanList"
			],
			[
				"E",
				"Eps"
			],
			[
				"dra",
				"draw_scene"
			],
			[
				"dr",
				"draw\tpygame(sprite) "
			],
			[
				"D",
				"DontAsk"
			],
			[
				"in",
				"init_music"
			],
			[
				"st",
				"start_music"
			],
			[
				"usep",
				"usepackage\t(TAU.tex)"
			],
			[
				"f",
				"fig"
			],
			[
				"Re",
				"ReCompile"
			],
			[
				"Com",
				"Compile"
			],
			[
				"Pr",
				"PROJECT"
			],
			[
				"I",
				"INT_MAX\t(graph_main.hpp)"
			],
			[
				"inc",
				"include"
			],
			[
				"e",
				"echo\t(Makefile)"
			],
			[
				"tm",
				"tmp/*.png"
			],
			[
				"gar",
				"graph\t(graph.h)"
			],
			[
				"graph",
				"graph.dot\t(graph.h)"
			],
			[
				"be",
				"begin"
			],
			[
				"ve",
				"vector"
			],
			[
				"vect",
				"vector\tstd::vector"
			],
			[
				"Ge",
				"GenHl"
			],
			[
				"pu",
				"push_back"
			],
			[
				"G",
				"GenIJ"
			],
			[
				"P",
				"PrintVertex"
			],
			[
				"i",
				"i"
			],
			[
				"ma",
				"max"
			],
			[
				"vec",
				"vec_s"
			],
			[
				"buf",
				"buf1"
			],
			[
				"re",
				"return\t(slau.hpp)"
			],
			[
				"pri",
				"printf\tprintf …"
			],
			[
				"bu",
				"buf1"
			],
			[
				"b",
				"buf1"
			],
			[
				"v",
				"vector\tstd::vector"
			],
			[
				"s",
				"std\t(slau.h)"
			],
			[
				"d",
				"double"
			],
			[
				"fi",
				"filename\tstatement"
			],
			[
				"poi",
				"point_sort_to_poligon\tfunction"
			],
			[
				"base",
				"base_dots"
			],
			[
				"ol",
				"old_e1"
			],
			[
				"ra",
				"ratio"
			],
			[
				"old",
				"old_control_start"
			],
			[
				"old_",
				"old_control_end"
			],
			[
				"ge",
				"get_a"
			],
			[
				"r",
				"ratio"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/oberon/university/MetOpt/optmet/Makefile",
			"settings":
			{
				"buffer_size": 272,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oberon/university/MetOpt/optmet/src/main.py",
			"settings":
			{
				"buffer_size": 1986,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oberon/university/MetOpt/optmet/src/generator.py",
			"settings":
			{
				"buffer_size": 591,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oberon/university/MetOpt/optmet/src/calculations.py",
			"settings":
			{
				"buffer_size": 2352,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oberon/university/MetOpt/optmet/src/tangents.py",
			"settings":
			{
				"buffer_size": 8519,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oberon/university/MetOpt/optmet/src/graph.py",
			"settings":
			{
				"buffer_size": 147,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++11/C++11.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				]
			],
			[
				"Packages/Python 3/Python3.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"mdprev",
				"Markdown Preview: Preview in Browser"
			],
			[
				"latex",
				"LaTeXTools: Show word count"
			],
			[
				"late",
				"LaTeXTools: Show toggles"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"la",
				"LaTeXTools: Jump to PDF"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"gith",
				"Github: Plugin Settings"
			],
			[
				"insta",
				"Git: Reset (unstage) All"
			],
			[
				"git ",
				"Git: Push"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"go",
				"Git: Commit"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"prev",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			]
		],
		"width": 533.0
	},
	"console":
	{
		"height": 188.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/oberon/university/MetOpt/optmet",
		"/home/oberon/university/MetOpt/optmet/src",
		"/home/oberon/university/MetOpt/optmet/subl_proj"
	],
	"file_history":
	[
		"/home/oberon/university/MetOpt/optmet/subl_proj/optmet.sublime-project",
		"/home/oberon/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/oberon/university/MetOpt/optmet/src/main.py",
		"/home/oberon/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/oberon/university/MetOpt/optmet/src/graph.py",
		"/home/oberon/Makefile",
		"/home/oberon/scripts/check_git.sh",
		"/home/oberon/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/oberon/university/MetOpt/optmet/test/main.py",
		"/home/oberon/university/MetOpt/optmet/src/render.py",
		"/home/oberon/university/MetOpt/optmet/gens/tanlist.gen",
		"/home/oberon/university/MetOpt/optmet/gens/circlelist.gen",
		"/home/oberon/university/MetOpt/optmet/Makefile",
		"/home/oberon/university/MetOpt/optmet/src/__init__.py",
		"/home/oberon/university/past_projects/MatMod/Makefile",
		"/home/oberon/Diploma/wiki/КФУ.tex",
		"/home/oberon/Diploma/wiki/КФУ.md",
		"/home/oberon/Diploma/wiki/biomes.md",
		"/home/oberon/Diploma/wiki/resources.md",
		"/home/oberon/Diploma/wiki/interactions.md",
		"/home/oberon/Diploma/wiki/villages.md",
		"/home/oberon/Diploma/wiki/peasants.md",
		"/home/oberon/Diploma/wiki/weather.md",
		"/home/oberon/Diploma/wiki/professions.md",
		"/home/oberon/Diploma/wiki/happiness.md",
		"/home/oberon/.config/sublime-text-3/Packages/User/LaTeXTools.sublime-settings",
		"/home/oberon/.config/sublime-text-3/Packages/LaTeXTools/LaTeXTools.sublime-settings",
		"/home/oberon/.config/sublime-text-3/Packages/CiteBibtex/CiteBibtex.sublime-settings",
		"/home/oberon/ThoAC/tex/chapters/t_2.tex",
		"/home/oberon/ThoAC/tex/chapters/t_1.tex",
		"/home/oberon/ThoAC/tex/t_2.tex",
		"/home/oberon/ThoAC/Makefile",
		"/home/oberon/ThoAC/tex/fig/Makefile",
		"/home/oberon/ThoAC/tex/fig/t1/texput.log",
		"/home/oberon/Projects/TAU/TAU.sublime-project",
		"/home/oberon/ThoAC/Sections/lec_1.tex",
		"/home/oberon/ThoAC/Sections/lec_1/Lecture 1.1.Kapalin.toc",
		"/home/oberon/ThoAC/tmp/TAU.log",
		"/home/oberon/ThoAC/tmp/TAU.toc",
		"/home/oberon/ThoAC/TAU.log",
		"/home/oberon/.config/sublime-text-3/Packages/LaTeXTools/LaTeXTools (Advanced).sublime-settings",
		"/home/oberon/algol/headers/graph_prints.hpp",
		"/home/oberon/algol/scripts/dot2png.sh",
		"/home/oberon/algol/scripts/viewpng.sh",
		"/home/oberon/algol/scripts/closepictures.sh",
		"/home/oberon/algol/Makefile",
		"/home/oberon/algol/tmp/dots/graph3.dot",
		"/home/oberon/algol/tmp/dots/graph1.dot",
		"/home/oberon/algol/tmp/dot2png.sh",
		"/home/oberon/algol/graph.txt",
		"/home/oberon/algol/graph.hpp",
		"/home/oberon/OpenGl/1.",
		"/etc/X11/xorg.conf",
		"/home/oberon/OpenGl/1.cpp",
		"/home/oberon/.config/sublime-text-3/Packages/User/Github Tools.sublime-settings",
		"/home/oberon/.config/sublime-text-3/Packages/User/Git.sublime-settings",
		"/home/oberon/.config/sublime-text-3/Packages/Git/Git.sublime-settings",
		"/home/oberon/Job/Law-and-Order/COMMIT_EDITMSG.COMMIT_EDITMSG",
		"/home/oberon/.config/sublime-text-3/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/home/oberon/Downloads/Fel.sh",
		"/home/oberon/.zshrc",
		"/home/oberon/prog/pyfork/pybezier/dot.py",
		"/home/oberon/prog/pyfork/pybezier/README",
		"/home/oberon/prog/pyfork/pybezier/main.py",
		"/home/oberon/prog/pyfork/pybezier/test.py",
		"/home/oberon/prog/pyfork/pybezier/functions.py",
		"/home/oberon/prog/pyfork/pybezier/requirements.txt",
		"/home/oberon/prog/pyfork/pybezier/TODO",
		"/home/oberon/prog/pybezier/curve.py",
		"/home/oberon/prog/pybezier/functions.py",
		"/home/oberon/prog/pybezier/functionsv3.py",
		"/home/oberon/prog/pybezier/fn_addition.py",
		"/home/oberon/prog/pybezier/main.py",
		"/home/oberon/beztest/bezier-pygame/__pycache__/bezier.cpython-35.pyc",
		"/home/oberon/prog/pebezier_fork/pybezier/main.py",
		"/home/oberon/.xinitrc",
		"/home/oberon/¬/.xinitrc",
		"/home/oberon/beztest/bezier-pygame/text.py",
		"/home/oberon/prog/pebezier_fork/pybezier/forcepull.sh"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 148.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_",
			"_____________",
			"____________",
			"___________",
			"pyd",
			"alpha_f",
			"alpha_l",
			"circleDotDict",
			"items",
			"[circ][dot + 1]",
			"[circ][dot]",
			".append",
			")])\n",
			"tanList.append(cp.deepcopy(line))",
			"tn.all_tans(M, circleList, Eps, offset)",
			"tan",
			"tan[",
			"-o -name \"Makefile\" -print0 ",
			" . ",
			"G,",
			"G",
			"\n        graphy.add_edge(tuple(point), tuple(p), weight=calc.norm(point, p))",
			"\n        graphy.add_edge(tuple(point), tuple(p), weight=calc.norm(point, p))\n",
			"\n        graphy.add_edge(tuple(p_1), tuple(p_2), weight=calc.norm(p_1, p_2))",
			"\n    graphy.add_edge(tuple(p_1), tuple(p_2), weight=calc.norm(p_1, p_2))",
			", graffyGraph",
			"Graph",
			"Graph.add_edge(p_1",
			"Graph.add_edge(",
			"p_1",
			"_1",
			"circleList",
			"Eps",
			"0][",
			"0][0",
			"0",
			"and",
			"Eps",
			"False",
			"norm(",
			"common_tan",
			"1",
			"handelList",
			"common_tan",
			"500",
			"heck_collisions",
			", O",
			"O[",
			"circlelist",
			"list",
			"2 * Eps / norm(o_1, o_2)",
			"circ",
			"o_1",
			"+",
			"* sig[",
			" * sig[",
			" * sig[0]",
			" * sig[",
			"*",
			"sig[",
			"2 * Eps / norm(o_1, o_2)",
			"sin",
			"+",
			"-",
			"+",
			"+ ",
			"-",
			"sin",
			"cos",
			"sun",
			"sin",
			"cos",
			"-",
			"sun",
			"sin",
			"cos",
			"sun",
			"sin",
			"sins",
			"sin",
			"cos",
			"cp.copy",
			"copy(line)",
			"tanList.append(line)",
			"cur_1",
			"tanList.append(line)",
			"if check_collisions(line, circleList, Eps):",
			"\n    if check_collisions(line, circleList, Eps):",
			"circleList",
			"rad",
			"circ",
			" + offset",
			"circleList",
			"50",
			"255",
			"0",
			"\"\"\"",
			"p",
			"point",
			"_8",
			"_7",
			"_6",
			"_5",
			"_4",
			"_3",
			"/",
			"="
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/oberon/university/MetOpt/optmet/Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 272,
						"regions":
						{
						},
						"selection":
						[
							[
								75,
								75
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/oberon/university/MetOpt/optmet/src/main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1986,
						"regions":
						{
						},
						"selection":
						[
							[
								1314,
								1314
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/oberon/university/MetOpt/optmet/src/generator.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 591,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/oberon/university/MetOpt/optmet/src/calculations.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2352,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										958,
										959
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										247,
										248
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/oberon/university/MetOpt/optmet/src/tangents.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8519,
						"regions":
						{
						},
						"selection":
						[
							[
								5665,
								5665
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										5664,
										5665
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										5644,
										5645
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python 3/Python3.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2793.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/oberon/university/MetOpt/optmet/src/graph.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 147,
						"regions":
						{
						},
						"selection":
						[
							[
								147,
								147
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/Python 3/Python3.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 52.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 154.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 130.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Makefile/Make.sublime-build",
	"project": "optmet.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 154.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
